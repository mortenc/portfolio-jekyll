html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{text-rendering:optimizelegibility}html{font:400 20px/32px Metric,Helvetica,Arial,sans-serif;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-feature-settings:"kern" 1;font-kerning:normal}body{color:#404448;background-color:#fff;margin:0;overflow-x:hidden}h1,h2,h3,h4,h5,h6{font-family:Metric,Helvetica,Arial,sans-serif;color:#282b2d;line-height:32px}img{max-width:100%;vertical-align:middle}a{color:blue;text-decoration:none}a:visited{color:#0000b3}a:hover{color:#404448;text-decoration:underline}.header{position:absolute;top:0;width:100%;display:none}.header__nav{float:right}.header__nav ul{list-style:none;margin:0;padding:0}.header__nav ul li{display:inline-block}.header__nav ul li a{color:#fff}.footer,.intro__name{padding:32px 0}.intro__name{max-width:1200px;margin-left:auto;margin-right:auto}.intro__name:after{clear:both;content:"";display:block}.intro__name h1{font-size:.667rem;font-weight:700;line-height:1.2;color:#fff;text-transform:uppercase;letter-spacing:.25rem}.intro__blurb{max-width:1200px;margin-left:auto;margin-right:auto}.intro__blurb:after{clear:both;content:"";display:block}.intro__blurb h2{float:left;display:block;margin-right:2.35765%;width:57.35098%;font-size:2rem;font-weight:100;line-height:1.2;color:#fff}.intro__blurb h2:last-child{margin-right:0}.intro__blurb:before{content:"";position:absolute;left:0;width:100%;height:1px;background-color:#fff;opacity:.05}.intro__desc{max-width:1200px;margin-left:auto;margin-right:auto}.intro__desc:after{clear:both;content:"";display:block}.intro__desc p{float:left;display:block;margin-right:2.35765%;width:40.29137%;margin-left:59.70863%;margin-right:0;color:#fff;font-size:1.25rem}.intro__desc p:last-child{margin-right:0}.project .sidenav{position:fixed;height:100%;width:64px;border-right:1px solid hsla(0,0%,100%,.1);z-index:2}.project__hero{display:block;position:relative;overflow:hidden;background-size:cover;background-position:100%;height:100vh;max-width:100%}.project__hero:after{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background-color:#000;z-index:1;opacity:.4}.project__hero__overlay{top:0;left:0;right:50%;bottom:192px;position:absolute;padding-left:64px;opacity:1;border-right:1px solid hsla(0,0%,100%,.1);z-index:2}.project__title{position:absolute;bottom:0;color:#fff;font-size:5.063rem;font-weight:100;line-height:96px;padding:32px 64px}.project__info{position:absolute;width:100%;bottom:0;right:0;padding-left:64px;border-top:1px solid hsla(0,0%,100%,.1);z-index:3}.project__info li{color:#fff;display:block;float:left;padding:64px}.project__info span{display:block;text-transform:uppercase;letter-spacing:.25rem;font-size:.6rem;font-weight:700}.project__content{max-width:1200px;margin-left:auto;margin-right:auto;padding-top:64px}.project__content:after{clear:both;content:"";display:block}.project__content h1,.project__content h2,.project__content p{float:left;display:block;margin-right:2.35765%;width:48.82117%;margin-left:25.58941%;margin-right:0}.project__content h1:last-child,.project__content h2:last-child,.project__content p:last-child{margin-right:0}.project__content h1{font-size:3.375rem;font-weight:400;line-height:80px;border-bottom:1px solid #e9eaeb;padding-bottom:32px}.project__content *+h1{margin-top:160px}.project__content h1+*{margin-top:56px!important}.project__content h2{font-size:1.5rem;font-weight:500;line-height:56px;float:left;display:block;margin-right:2.35765%;width:100%}.project__content h2:last-child{margin-right:0}.project__content *+h2{margin-top:64px}.project__content h3{font-size:.75rem;text-transform:uppercase;letter-spacing:.1rem;line-height:32px}.project__content h3:before{display:inline-block;content:"";height:1px;width:2rem;margin-right:1rem;background-color:blue;vertical-align:middle}.project__content *+h3{margin-top:48px}.project__content *+h4,.project__content *+h5{margin-top:32px}.project__content *+li,.project__content *+ol,.project__content *+p,.project__content *+ul{margin-top:16px}.project__content ol,.project__content ul{list-style-position:inside;margin-left:32px}
/*# sourceMappingURL=data:application/json;base64, */
