@import url("http://overpass-30e2.kxcdn.com/overpass.css");html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}*{text-rendering:optimizelegibility}html{font-size:16px;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-feature-settings:"kern" 1;font-kerning:normal;overflow-x:hidden}@media screen and (min-width:1824px){html{font-size:20px}}body{font:400 1rem/1.75rem Overpass,Helvetica,Arial,sans-serif;color:#404448;background-color:#fff;margin:0 auto;overflow-x:hidden}h1,h2,h3,h4,h5,h6{font-family:Overpass,Helvetica,Arial,sans-serif;color:#282b2d;line-height:1.75rem}img{max-width:100%;vertical-align:middle}a{text-decoration:none;border-bottom:1px solid;transition:color .2s ease-in-out}a,a:visited{color:#718a96}a:hover{color:#030405}.grid{max-width:1200px;margin-left:auto;margin-right:auto;pointer-events:none;position:absolute;top:0;left:0;right:0;bottom:0;z-index:300}.grid:after{clear:both;content:"";display:block}.grid__line{float:left;display:block;width:8.33333%;border-left:1px solid hsla(0,0%,100%,.05);height:100%;position:absolute}.grid__line,.grid__line:last-child{margin-right:0}.grid__line--2{margin-left:8.33333%}.grid__line--3{margin-left:16.66667%}.grid__line--4{margin-left:25%}.grid__line--5{margin-left:33.33333%}.grid__line--6{margin-left:41.66667%}.grid__line--7{margin-left:50%}.grid__line--8{margin-left:58.33333%}.grid__line--9{margin-left:66.66667%}.grid__line--10{margin-left:75%}.grid__line--11{margin-left:83.33333%}.grid__line--12,.grid__line--13{margin-left:91.66667%}.grid__line--13{border-left:none;border-right:1px solid hsla(0,0%,100%,.05)}.grid--dark .grid__line{border-color:rgba(0,0,0,.05)}.footer{max-width:1200px;margin-left:auto;margin-right:auto;padding:3.5rem;border-top:1px solid rgba(0,0,0,.05)}.footer:after{clear:both;content:"";display:block}.footer__legal{float:left}.footer .social-links{float:right;display:-ms-flexbox;display:flex}.footer .social-links li{display:block;margin-left:1.75rem}.body--front{background-color:#1b2225}.front__content{float:left;display:block;width:100%;margin-right:0}.front__content:last-child,.intro{margin-right:0}.intro{float:left;display:block;width:75%;margin-left:8.33333%}.intro:last-child{margin-right:0}.intro__name h1{text-transform:uppercase;letter-spacing:.4em;font-size:.6243rem;font-weight:500;padding-top:3.5rem;color:#fff;opacity:.5}.intro__blurb{display:block}.intro__blurb:after{clear:both;content:"";display:block}.intro__blurb h2{margin-top:.875rem;font-size:1.26562rem;line-height:2.625rem;color:#fff}@media screen and (min-width:768px){.intro__blurb h2{float:left;display:block;width:55.55556%;margin-right:0}.intro__blurb h2:last-child{margin-right:0}}@media screen and (min-width:1024px){.intro__blurb h2{font-size:1.42383rem;line-height:2.625rem}}@media screen and (min-width:1224px){.intro__blurb h2{float:left;display:block;width:44.44444%;margin-right:0}.intro__blurb h2:last-child{margin-right:0}}@media screen and (min-width:1824px){.intro__blurb h2{float:left;display:block;width:55.55556%;margin-right:0;font-weight:400;font-size:1.80203rem;line-height:5.25rem}.intro__blurb h2:last-child{margin-right:0}}.intro__desc{display:block;margin-top:2.625rem;color:#fff;opacity:.75;-moz-column-count:2;column-count:2;-moz-column-gap:1.75rem;column-gap:1.75rem}.intro__desc:after{clear:both;content:"";display:block}@media screen and (min-width:768px){.intro__desc{float:left;display:block;width:58.33333%}.intro__desc,.intro__desc:last-child{margin-right:0}}@media screen and (min-width:1224px){.intro__desc{float:left;display:block;width:66.66667%;margin-left:22.22222%}.intro__desc,.intro__desc:last-child{margin-right:0}}.project-list{float:left;display:block;width:83.33333%;margin-left:8.33333%;margin-top:7rem}.project-list,.project-list:last-child{margin-right:0}.project-list__project{float:left;display:block;width:50%;margin-right:0;margin-bottom:7rem}.project-list__project:last-child{margin-right:0}.project-list__project:nth-child(even){padding-left:.875rem}.project-list__project:nth-child(odd){padding-right:.875rem}.project-list__project a{display:block;position:relative;border:0;height:100%}.project-list__project a:after{clear:both;content:"";display:block}.project-list__project__info{float:left;display:block;margin-right:0;width:60%;padding:2.625rem 1.75rem;margin:0 1.75rem;transform:translate3d(0,3.5rem,0);position:absolute;left:0;bottom:0}.project-list__project__info:last-child{margin-right:0}.project-list__project__client{display:block;text-transform:uppercase;letter-spacing:.4em;font-size:.6243rem;font-weight:500;color:#fff;opacity:.5}.project-list__project__title{display:block;font-size:1.26562rem;font-weight:600;color:#fff}.project-list__project__desc{margin-top:.875rem;color:#fff;opacity:.7}.project__sidenav{position:absolute;z-index:1000;padding:.875rem 1.75rem .875rem 2.625rem;color:#030405;background:#fff;-ms-transform-origin:0 100%;transform-origin:0 100%;transform:rotate(-90deg) translate3d(-100%,100%,0);transition:background-color .3s ease-in-out,color .3s ease-in-out;border-bottom:0}@media screen and (min-width:1224px){.project__sidenav{position:fixed;top:0;left:0}}.project__sidenav span{position:relative;display:block;text-align:right;text-transform:uppercase;letter-spacing:.4em;font-size:.6243rem;font-weight:500}.project__sidenav span i{display:inline-block;width:0;height:1px;background-color:#030405;vertical-align:middle;margin-left:.875rem;transition:width .2s ease-in .2s;-ms-transform-origin:100% 100%;transform-origin:100% 100%}.project__sidenav span i:before{display:block;content:" ";width:0;height:0;position:absolute;right:0;top:0;border-top:3px solid transparent;border-bottom:3px solid transparent;border-left:3px solid #030405;transform:rotate(-90deg) translate3d(-5px,1px,0);opacity:0;transition:opacity .1s ease-in}.project__sidenav span i:after{display:block;content:" ";width:1px;position:absolute;right:0;top:15px;bottom:13px;background-color:#030405;transition:top .1s linear .1s}.project__sidenav:hover{background-color:#fff;text-decoration:none;color:#030405;transition:background-color .3s ease-in-out,color .3s ease-in-out}.project__sidenav:hover i{width:1.75rem;transition:width .2s ease-out}.project__sidenav:hover i:before{opacity:1;transition:opacity .1s ease-in .3s}.project__sidenav:hover i:after{top:9px;transition:top .1s linear .2s}.project__hero{position:relative;overflow:hidden;min-height:90vh;max-width:100%}@media screen and (min-width:1024px){.project__hero{display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch;min-height:100vh}}.project__hero>.grid{max-width:1200px;margin-left:auto;margin-right:auto}.project__hero>.grid:after{clear:both;content:"";display:block}@media screen and (min-width:1024px){.project__hero__intro{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:end;justify-content:flex-end;-ms-flex:1 40%;flex:1 40%;-ms-flex-order:1;order:1;box-shadow:0 0 9.375rem rgba(0,0,0,.4)}}.project__hero__img{position:relative;background-size:cover;background-position:50%;max-height:85vh}@media screen and (min-width:1024px){.project__hero__img{-ms-flex:3 60%;flex:3 60%;-ms-flex-order:2;order:2;max-height:none}}.project__info{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:end;justify-content:flex-end;padding:1.75rem}@media screen and (min-width:768px){.project__info{padding:3.5rem 3.5rem 2.625rem}}.project__info__client{text-transform:uppercase;letter-spacing:.4em;font-size:.6243rem;font-weight:500;color:#fff;margin-bottom:.875rem;padding-left:.25rem;opacity:.5}.project__info__title{color:#fff;font-size:1.80203rem;font-weight:800;line-height:2.625rem;letter-spacing:-.04em;z-index:300}@media screen and (min-width:600px){.project__info__title{font-size:2.2807rem;line-height:3.5rem}}@media screen and (min-width:1024px){.project__info__title{font-size:2.88651rem;line-height:3.5rem}}.project__info__desc{margin-top:.875rem;font-size:1.125rem;line-height:1.75rem;color:#fff;opacity:.7}@media screen and (min-width:1024px){.project__info__desc{font-size:1.26562rem;line-height:2.1875rem}}.project__details{width:100%;background:hsla(0,0%,100%,.9);padding:1.75rem 0}.project__details:after{clear:both;content:"";display:block}@media screen and (min-width:1024px){.project__details{padding:2.625rem 3.5rem}}.project__details li{color:#030405;display:block;float:left;width:50%;font-weight:600;font-size:.88889rem;padding-bottom:.875rem;opacity:.85}@media screen and (max-width:768px){.project__details li:nth-child(odd){padding-left:1.75rem;padding-right:.875rem}}@media screen and (max-width:768px){.project__details li:nth-child(even){padding-left:.875rem;padding-right:1.75rem}}.project__details span{display:block;text-transform:uppercase;letter-spacing:.4em;font-size:.6243rem;font-weight:500;color:#030405;opacity:.5}.project__details--alt{float:left;display:block;width:33.33333%;margin-right:0;position:absolute;right:0;top:0;padding:3.5rem 0;border-left:1px solid rgba(0,0,0,.05);border-bottom:1px solid rgba(0,0,0,.05);border-right:1px solid rgba(0,0,0,.05)}.project__details--alt:last-child{margin-right:0}.project__details--alt li{width:100%;padding:.875rem 3.5rem;margin:0}.project__content{max-width:1200px;margin-left:auto;margin-right:auto;position:relative;padding:2.625rem 0;background-color:#fff}.project__content:after{clear:both;content:"";display:block}@media screen and (min-width:1224px){.project__content{padding:3.5rem 0}}.project__content h1,.project__content h2,.project__content h3,.project__content h4,.project__content h5,.project__content h6{font-weight:700;letter-spacing:-.05em}.project__content h1,.project__content h2,.project__content p{float:left;display:block;margin-right:0;width:100%}.project__content h1:last-child,.project__content h2:last-child,.project__content p:last-child{margin-right:0}@media screen and (min-width:1224px){.project__content h1,.project__content h2,.project__content p{float:left;display:block;width:50%;margin-left:25%;margin-right:0}.project__content h1:last-child,.project__content h2:last-child,.project__content p:last-child{margin-right:0}.project__content h1:after,.project__content h2:after,.project__content p:after{clear:both;content:"";display:block}}.project__content h1{font-size:1.42383rem;line-height:4.375rem;border-bottom:1px solid #e9eaeb;padding-bottom:1.75rem}.project__content *+h1{margin-top:8.75rem}.project__content h1+*{margin-top:3.0625rem!important}.project__content h2{font-size:1.42383rem;line-height:2.1875rem;position:relative;background-color:#fff}.project__content h2:before{display:block;content:" ";width:.875rem;height:.4375rem;background-color:#52527b;opacity:.1;margin-bottom:.875rem;vertical-align:middle}.project__content *+h2{margin-top:2.625rem}.project__content h3{font-size:.88889rem;text-transform:uppercase;letter-spacing:.1rem;line-height:1.75rem}.project__content h3:before{display:inline-block;content:"";height:1px;width:2rem;margin-right:1rem;background-color:blue;vertical-align:middle}.project__content *+h3{margin-top:2.625rem}.project__content *+h4,.project__content *+h5{margin-top:1.75rem}.project__content *+li,.project__content *+ol,.project__content *+p,.project__content *+ul{margin-top:.875rem}.project__content p:first-of-type:first-letter{float:left;font-size:3.24732rem;line-height:3.5rem;padding-right:.5rem;color:#282b2d;font-weight:600}.project__content__image:after{clear:both;content:"";display:block}.project__content__image img{width:100%;margin-top:2.625rem}.project__content__image figcaption{float:left;display:block;margin-right:0;width:83.33333%;margin-left:8.33333%;font-size:.85rem;font-style:italic;color:#718a96;line-height:1.4875rem;text-align:center;margin-top:1.75rem}.project__content__image figcaption:last-child{margin-right:0}.project__content__image+p{margin-top:2.625rem}.project__content__image--fit{float:left;display:block;margin-right:0;width:41.66667%;margin-left:25%}.project__content__image--fit:last-child{margin-right:0}.project__content__image--wide{float:left;display:block;margin-right:0;width:58.33333%;margin-left:16.66667%}.project__content__image--wide:last-child{margin-right:0}.project__content__image--full{width:100vw;position:relative;left:50%;right:50%;margin-left:-50vw;margin-right:-50vw}.project__content__image--full img{margin-top:2.625rem}.project__content__image--small img{float:left;display:block;margin-right:0;width:66.66667%;margin-left:8.33333%}.project__content__image--small img:last-child{margin-right:0}.project__content__image--small figcaption{float:left;display:block;width:16.66667%;margin-right:0;padding-left:1.75rem;font-size:.85rem;font-style:italic;color:#718a96;line-height:1.4875rem;text-align:left}.project__content__image--small figcaption:last-child{margin-right:0}.project__content ol,.project__content ul{list-style-position:inside;margin-left:1.75rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
